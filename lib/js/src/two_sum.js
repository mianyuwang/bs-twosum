// Generated by BUCKLESCRIPT VERSION 1.8.2, PLEASE EDIT WITH CARE
'use strict';

var $$Array                 = require("bs-platform/lib/js/array.js");
var Js_exn                  = require("bs-platform/lib/js/js_exn.js");
var Caml_obj                = require("bs-platform/lib/js/caml_obj.js");
var Pervasives              = require("bs-platform/lib/js/pervasives.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function find_index_of(nums, v) {
  var impl = function (nums, v) {
    if (nums) {
      if (Caml_obj.caml_equal(nums[0], v)) {
        return 0;
      } else {
        return 1 + impl(nums[1], v) | 0;
      }
    } else {
      return Pervasives.failwith("Not found");
    }
  };
  try {
    return impl(nums, v);
  }
  catch (raw_exn){
    var exn = Js_exn.internalToOCamlException(raw_exn);
    if (exn[0] === Caml_builtin_exceptions.failure) {
      return -1;
    } else {
      throw exn;
    }
  }
}

function two_sum_by_list(nums, target) {
  if (nums) {
    var tl = nums[1];
    var fi = find_index_of(tl, target - nums[0] | 0);
    if (fi >= 0) {
      return /* tuple */[
              0,
              fi + 1 | 0
            ];
    } else {
      var match = two_sum_by_list(tl, target);
      return /* tuple */[
              match[0] + 1 | 0,
              match[1] + 1 | 0
            ];
    }
  } else {
    return Pervasives.failwith("Not found");
  }
}

function twoSum(nums, target) {
  return two_sum_by_list($$Array.to_list(nums), target);
}

var test = /* int array */[
  2,
  7,
  11,
  15
];

var match = two_sum_by_list($$Array.to_list(test), 18);

console.log("Two numbers make the sum are: " + (Pervasives.string_of_int(match[0]) + (", " + Pervasives.string_of_int(match[1]))));

exports.find_index_of   = find_index_of;
exports.two_sum_by_list = two_sum_by_list;
exports.twoSum          = twoSum;
/* match Not a pure module */
